@inherits UmbracoViewPage<SiteBuilderBaseViewModel>
@using Microsoft.Extensions.Options
@using USNSiteBuilder.Core.Models
@using USNSiteBuilder.Core.Extensions
@inject IOptions<USNAppSettings> _appSettings;
@{
    if (!Model.Value<bool>("hideBreadcrumb"))
    {
        int itemLevel = 1;

        <section class="breadcrumb-trail">
            <div class="container">
                <nav aria-label="@Umbraco.GetDictionaryValue("USN Aria Breadcrumb")">
                    <ol class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
                        @foreach (var item in Model.Ancestors().Where(x => x.IsVisible() && ! x.HideNodeFromPath(_appSettings)).OrderBy(x => x.Level))
                        {
                            string breadcrumbLinkText = item.HasValue("breadcrumbLinkText") ? item.Value<string>("breadcrumbLinkText") : item.Name;

                            <li class="breadcrumb-item" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem"><a href="@item.Url()" itemtype="http://schema.org/Thing" itemprop="item"><span itemprop="name"><i class="icon before"></i>@Html.Raw(breadcrumbLinkText)</span></a><meta itemprop="position" content="@itemLevel" /></li>
                            
                            itemLevel += 1;
                        }

                        @{
                            string breadcrumbLinkTextPage = Model.HasValue("breadcrumbLinkText") ? Model.Value<string>("breadcrumbLinkText") : Model.Name;
                            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem" class="breadcrumb-item active" aria-current="page"><span itemprop="name"><i class="icon before"></i>@Html.Raw(breadcrumbLinkTextPage)</span><meta itemprop="position" content="@itemLevel" /></li>
                        }
                    </ol>
                </nav>
            </div>
        </section>
    }
}