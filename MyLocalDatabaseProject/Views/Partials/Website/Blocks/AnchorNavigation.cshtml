@inherits UmbracoViewPage<SiteBuilderBlock>
@using USNSiteBuilder.Core.Models
@using USNSiteBuilder.Core.Extensions
@{
    //Available as Component Block only

    var content = (Usn_Cb_AnchorNavigation)Model.BlockContent;
    var settings = (Usn_Cbs_AnchorNavigation)Model.BlockSettings;

    AnimationSettings animation = (AnimationSettings)ViewData["animation"];

    if (content.AnchorNavigation.HasValue())
    {
        string alignment = settings.NavigationAlignment.HasValue() ? settings.NavigationAlignment : "justify-content-start text-left";
        string tabStyle = settings.LinkStyle.HasValue() ? settings.LinkStyle : "tab-basic";

        <button class="expand-anchor @alignment" data-toggle="collapse" type="button" aria-expanded="false" aria-label="@Umbraco.GetDictionaryValue("USN Aria Expand Anchor")">
            <span>@Umbraco.GetDictionaryValue("USN Menu")</span>
        </button>
        <nav class="@tabStyle @animation.AnimationClass" data-os-animation="@animation.AnimationStyle" data-os-animation-delay="@animation.AnimationDelay" data-os-animation-duration="@animation.AnimationDuration" aria-label="@Umbraco.GetDictionaryValue("USN Aria Anchor")">
            <ul class="nav @alignment">
                @foreach (var item in content.AnchorNavigation)
                {
                    <li class="nav-item"><span><a class="nav-link nav-anchor-link nav-button-link" href="@item.link.LinkUrl" @Html.Raw(item.link.LinkTarget) @Html.Raw(item.link.LinkTitle)>@Html.Raw(item.icon)@Html.Raw(item.link.LinkText)@Html.Raw(item.link.LinkTargetIcon)</a></span></li>
                }
            </ul>
        </nav>
    }
}